[{"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\index.js":"1","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\App.js":"2","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\reportWebVitals.js":"3","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\views\\Home.js":"4","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\Nav.js":"5","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\other\\BgSprite.js":"6","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\HeroText.js":"7","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\other\\SectionPicker.js":"8","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\sections\\about\\About.js":"9","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\sections\\about\\AboutCard.js":"10"},{"size":501,"mtime":1608389746927,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1608908523651,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":448,"mtime":1608909142899,"results":"15","hashOfConfig":"12"},{"size":969,"mtime":1608921788410,"results":"16","hashOfConfig":"12"},{"size":210,"mtime":1608406977774,"results":"17","hashOfConfig":"12"},{"size":1538,"mtime":1608908701564,"results":"18","hashOfConfig":"12"},{"size":2063,"mtime":1608928889710,"results":"19","hashOfConfig":"12"},{"size":2641,"mtime":1608928791713,"results":"20","hashOfConfig":"12"},{"size":705,"mtime":1608929120073,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mn2t9w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\index.js",[],["46","47"],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\App.js",["48"],"import './App.scss';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Home from \"./views/Home\";\n\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route to=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\reportWebVitals.js",[],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\views\\Home.js",[],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\Nav.js",[],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\other\\BgSprite.js",["49"],"import React from \"react\";\r\n\r\nimport sprite from \"../../assets/svg/House.svg\"\r\n\r\nexport default function BgSprite(){\r\n    return(\r\n        <img className=\"bgSprite\" src={sprite} alt=\"svg image\"></img>\r\n    )\r\n}","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\HeroText.js",["50"],"import React, { useEffect, useState } from \"react\";\r\n\r\nlet text = [\r\n    \"My name is Mahatti Nilssaun!\",\r\n    \"My name is\",\r\n    \"My name is Matti Nilsson, and I like dogs...\",\r\n    \"My name is Matti Nilsson,\",\r\n    \"My name is Matti Nilsson, and I am a Frontend Developer!\"\r\n];\r\n\r\nexport default function HeroText(){\r\n    const [index, setIndex] = useState(0);\r\n    const [line, setLine] = useState(0);\r\n    const [lineToRead, setLineToRead] = useState(text[0].split(\"\"));\r\n    const [myText, setText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(index === lineToRead.length){\r\n                setLine(line + 1);\r\n                setLineToRead(text[line].split(\"\"))\r\n                setIndex(index + 1);\r\n            }\r\n            if(index <= lineToRead.length){\r\n                setText(myText + lineToRead[index]);\r\n                setIndex(index + 1);\r\n            }\r\n            if(index >= lineToRead.length){\r\n                setText(myText.slice(0, -1));\r\n                setIndex(index - 1);\r\n            }\r\n        }, 50)\r\n        if(index === lineToRead.length && text.length === line) clearInterval(interval);\r\n        return () => clearInterval(interval);\r\n    }, [index, line])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"hero\">\r\n                <h1>Welcome!</h1>\r\n                <div className=\"type-writer\">\r\n                    <div><p>{myText}</p></div><div className=\"line\"></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\other\\SectionPicker.js",["51"],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\sections\\about\\About.js",["52","53","54","55"],"C:\\Users\\DrawLind\\Desktop\\VanillaJs\\portfolio2\\src\\components\\sections\\about\\AboutCard.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":7,"column":9,"nodeType":"66","endLine":7,"endColumn":64},{"ruleId":"67","severity":1,"message":"68","line":35,"column":8,"nodeType":"69","endLine":35,"endColumn":21,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":54,"column":8,"nodeType":"69","endLine":54,"endColumn":16,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":17,"nodeType":"66","endLine":8,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":9,"column":17,"nodeType":"66","endLine":9,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":51,"column":17,"nodeType":"66","endLine":51,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":52,"column":17,"nodeType":"66","endLine":52,"endColumn":54},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lineToRead' and 'myText'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setText' needs the current value of 'lineToRead'.","ArrayExpression",["77"],"React Hook useEffect has a missing dependency: 'useScroll'. Either include it or remove the dependency array.",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [index, line, lineToRead, myText]",{"range":"83","text":"84"},"Update the dependencies array to be: [scroll, useScroll]",{"range":"85","text":"86"},[1236,1249],"[index, line, lineToRead, myText]",[1357,1365],"[scroll, useScroll]"]